{"ast":null,"code":"import { combineReducers } from 'redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { getAllPizzasReducer } from './reducers/pizzasReducers';\nimport { cartReducer } from './reducers/cartReducer';\nimport { registerUser } from './actions/userActions';\nconst finalReducer = combineReducers({\n  getAllPizzasReducer: getAllPizzasReducer,\n  cartReducer: cartReducer,\n  registerUser: registerUser\n});\nconst cartItems = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst initialState = {\n  cartReducer: {\n    cartItems: cartItems\n  }\n};\nconst composeEnhancers = composeWithDevTools({});\nconst store = createStore(finalReducer, initialState, composeEnhancers(applyMiddleware(thunk)));\nexport default store;","map":{"version":3,"sources":["E:/React Projects/mern-piiza/client/src/store.js"],"names":["combineReducers","createStore","applyMiddleware","thunk","composeWithDevTools","getAllPizzasReducer","cartReducer","registerUser","finalReducer","cartItems","localStorage","getItem","JSON","parse","initialState","composeEnhancers","store"],"mappings":"AAAA,SAAQA,eAAR,QAA8B,OAA9B;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,SAASC,mBAAT,QAAoC,2BAApC;AAEA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,YAAT,QAA6B,uBAA7B;AAGA,MAAMC,YAAY,GAAER,eAAe,CAAC;AAChCK,EAAAA,mBAAmB,EAAGA,mBADU;AAEhCC,EAAAA,WAAW,EAAGA,WAFkB;AAGhCC,EAAAA,YAAY,EAACA;AAHmB,CAAD,CAAnC;AAKA,MAAME,SAAS,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IAAoCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAApC,GAAmF,EAArG;AACA,MAAMG,YAAY,GAAG;AACrBR,EAAAA,WAAW,EAAG;AACVG,IAAAA,SAAS,EAAEA;AADD;AADO,CAArB;AAKA,MAAMM,gBAAgB,GAAGX,mBAAmB,CAAC,EAAD,CAA5C;AACA,MAAMY,KAAK,GAAGf,WAAW,CAACO,YAAD,EAAgBM,YAAhB,EAA8BC,gBAAgB,CAACb,eAAe,CAACC,KAAD,CAAhB,CAA9C,CAAzB;AAEA,eAAea,KAAf","sourcesContent":["import {combineReducers} from 'redux'\r\nimport { createStore, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\nimport { getAllPizzasReducer } from './reducers/pizzasReducers'\r\n\r\nimport { cartReducer } from './reducers/cartReducer'\r\nimport { registerUser } from './actions/userActions'\r\n\r\n\r\nconst finalReducer =combineReducers({\r\n    getAllPizzasReducer : getAllPizzasReducer,\r\n    cartReducer : cartReducer,\r\n    registerUser:registerUser\r\n})\r\nconst cartItems = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) :[]\r\nconst initialState = {\r\ncartReducer : {\r\n    cartItems: cartItems\r\n}\r\n}\r\nconst composeEnhancers = composeWithDevTools({})\r\nconst store = createStore(finalReducer , initialState ,composeEnhancers(applyMiddleware(thunk)) )\r\n\r\nexport default store"]},"metadata":{},"sourceType":"module"}