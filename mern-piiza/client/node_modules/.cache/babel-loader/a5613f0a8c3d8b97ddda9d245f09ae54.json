{"ast":null,"code":"var _jsxFileName = \"E:\\\\React Projects\\\\mern-piiza\\\\client\\\\src\\\\screens\\\\Adminscreen.js\";\nimport React, { uese } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst userState = useSelector(state => state.loginUserReducer);\nconst {\n  currentUser\n} = userState;\nconst dispatch = useDispatch();\nuseEffect(() => {\n  if (!currentUser.isAdmin) {\n    window.location.href = '/';\n  }\n}, []);\n\nfunction Adminscreen() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        fontSize: '35px'\n      },\n      children: \" Admin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Adminscreen;\nexport default Adminscreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"Adminscreen\");","map":{"version":3,"sources":["E:/React Projects/mern-piiza/client/src/screens/Adminscreen.js"],"names":["React","uese","useSelector","useDispatch","userState","state","loginUserReducer","currentUser","dispatch","useEffect","isAdmin","window","location","href","Adminscreen","fontSize"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,IAAf,QAA0B,OAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;AACA,MAAMC,SAAS,GAAGF,WAAW,CAACG,KAAK,IAAIA,KAAK,CAACC,gBAAhB,CAA7B;AACE,MAAM;AAACC,EAAAA;AAAD,IAAgBH,SAAtB;AACA,MAAMI,QAAQ,GAAGL,WAAW,EAA5B;AACAM,SAAS,CAAC,MAAM;AAEZ,MAAG,CAACF,WAAW,CAACG,OAAhB,EACA;AACIC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAqB,GAArB;AACH;AACJ,CANQ,EAMN,EANM,CAAT;;AAOF,SAASC,WAAT,GAAuB;AACnB,sBACI;AAAA,2BACI;AAAI,MAAA,KAAK,EAAE;AAACC,QAAAA,QAAQ,EAAC;AAAV,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;KANQD,W;AAQT,eAAeA,WAAf","sourcesContent":["import React, {uese} from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nconst userState = useSelector(state => state.loginUserReducer)\r\n  const {currentUser} = userState\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n      \r\n      if(!currentUser.isAdmin)\r\n      {\r\n          window.location.href='/'\r\n      }\r\n  }, [])\r\nfunction Adminscreen() {\r\n    return (\r\n        <div>\r\n            <h2 style={{fontSize:'35px'}}> Admin</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Adminscreen\r\n"]},"metadata":{},"sourceType":"module"}